openapi: 3.0.0
info:
  title: E-commerce API
  description: API documentation for the e-commerce application
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: uint
        email:
          type: string
        password:
          type: string
        name:
          type: string
        role:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: uint
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock:
          type: integer
    CartItem:
      type: object
      properties:
        id:
          type: integer
          format: uint
        user_id:
          type: integer
          format: uint
        product_id:
          type: integer
          format: uint
        quantity:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: integer
          format: uint
        user_id:
          type: integer
          format: uint
        total_amount:
          type: number
          format: float
        status:
          type: string

paths:
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /api/products:
    get:
      tags:
        - Products
      summary: Get all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Create a new product
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully

  /api/cart:
    get:
      tags:
        - Cart
      summary: Get user's cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User's cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
    post:
      tags:
        - Cart
      summary: Add item to cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  format: uint
                quantity:
                  type: integer
      responses:
        '201':
          description: Item added to cart

  /api/orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully